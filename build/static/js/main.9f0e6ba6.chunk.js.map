{"version":3,"sources":["config.js","store/Content.js","layouts/Header.js","layouts/Loader.js","components/Home/HomeContent.js","components/Home/Home.js","components/Search/Search.js","components/Lyrics/LyricsContent.js","App.js","serviceWorker.js","index.js"],"names":["KEY","Context","React","createContext","reducer","state","action","type","Object","objectSpread","track_list","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","message","body","catch","err","console","log","react_default","a","createElement","props","children","Component","Consumer","Header","className","react_router_dom","to","Loader","HomeContent","_props$track$track","track","album_name","artist_name","track_id","explicit","track_name","Home","undefined","layouts_Loader","map","songs","Home_HomeContent","Search","search_title","handleSubmit","e","preventDefault","Axios","handleChange","defineProperty","target","name","onSubmit","bind","placeholder","onChange","LyricsContent","lyrics","componentWillMount","match","params","id","lyrics_body","keys","App","Content_Provider","Header_Header","components_Search_Search","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f0e6ba6.chunk.js","sourcesContent":["const KEY = \"91e87e67ecdddbcbdfda16e1c285030e \";\r\nexport default KEY;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport KEY from \"../config\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SEARCH_TRACKS\":\r\n      return {\r\n        ...state,\r\n        track_list: action.payload,\r\n        heading: \"Top Search Results\"\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    track_list: [],\r\n    heading: \"Top Songs\",\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=20&country=us&f_has_lyrics=1&apikey=${KEY}`\r\n      )\r\n      .then(res =>\r\n        this.setState({ track_list: res.data.message.body.track_list })\r\n      )\r\n      .catch(err => console.log(err));\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./layouts.scss\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app-header\">\r\n        <h1 className=\"app-header-brand\">\r\n          <i className=\"fas fa-drum\" />\r\n          <Link to=\"/\">Lycrisyfy</Link>\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./layouts.scss\";\r\n\r\nfunction Loader() {\r\n  return <div className=\"lds-hourglass\" />;\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.scss\";\r\nfunction HomeContent(props) {\r\n  const {\r\n    album_name,\r\n    artist_name,\r\n    track_id,\r\n    explicit,\r\n    track_name\r\n  } = props.track.track;\r\n  return (\r\n    <div className=\"app-homeContent\">\r\n      <h2>\r\n        <i className=\"fas fa-compact-disc\" /> {album_name}\r\n      </h2>\r\n      <h3>{artist_name}</h3>\r\n      <h5>{track_name}</h5>\r\n      <span>\r\n        {explicit === 0 ? (\r\n          <i className=\"fas fa-thumbs-up\" />\r\n        ) : (\r\n          <i className=\"fas fa-thumbs-down\" />\r\n        )}\r\n      </span>\r\n      <button>\r\n        <Link to={`/top_songs/${track_id}`}>\r\n          <i className=\"fab fa-readme\" />\r\n          Lyrics\r\n        </Link>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeContent;\r\n","import React from \"react\";\r\nimport { Consumer } from \"../../store/Content\";\r\nimport Loader from \"../../layouts/Loader\";\r\nimport HomeContent from \"./HomeContent\";\r\nimport \"./Home.scss\";\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <Consumer>\r\n      {value => {\r\n        const { track_list, heading } = value;\r\n        if (track_list === undefined || track_list.length === 0) {\r\n          return <Loader />;\r\n        } else {\r\n          return (\r\n            <div>\r\n              <h2 className=\"header\"> {heading} </h2>\r\n              <div className=\"app-home\">\r\n                {track_list.map(songs => {\r\n                  return (\r\n                    <HomeContent key={songs.track.track_id} track={songs} />\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n      }}\r\n    </Consumer>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../store/Content\";\r\nimport \"./Search.scss\";\r\nimport Axios from \"axios\";\r\nimport KEY from \"../../config\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    search_title: \"\"\r\n  };\r\n  handleSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    Axios.get(\r\n      `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.search?q_artist=${\r\n        this.state.search_title\r\n      }&page_size=20&page=1&s_track_rating=desc&apikey=${KEY}`\r\n    ).then(res => {\r\n      dispatch({\r\n        type: \"SEARCH_TRACKS\",\r\n        payload: res.data.message.body.track_list\r\n      });\r\n    });\r\n    this.setState({ search_title: \"\" });\r\n  };\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          return (\r\n            <div className=\"app-searchbar\">\r\n              <h1>\r\n                <i className=\"fas fa-music\" /> ..Search your Songs, Artists,\r\n                Artists\r\n              </h1>\r\n              <form onSubmit={this.handleSubmit.bind(this, value.dispatch)}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search Songs, Albums or Artists.....\"\r\n                  name=\"search_title\"\r\n                  value={this.state.search_title}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <input type=\"submit\" value=\"Search\" />\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../layouts/Loader\";\r\nimport Axios from \"axios\";\r\nimport KEY from \"../../config\";\r\nimport \"./Lyrics.scss\";\r\n\r\nexport default class LyricsContent extends Component {\r\n  state = {\r\n    lyrics: {},\r\n    track: {}\r\n  };\r\n  componentWillMount = () => {\r\n    Axios.get(\r\n      `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${\r\n        this.props.match.params.id\r\n      }&apikey=${KEY}`\r\n    ).then(res => this.setState({ lyrics: res.data.message.body.lyrics }));\r\n  };\r\n\r\n  render() {\r\n    const { lyrics_body } = this.state.lyrics;\r\n    return this.state.lyrics === undefined ||\r\n      this.state.track === undefined ||\r\n      Object.keys(this.state.lyrics).length === 0 ? (\r\n      <Loader />\r\n    ) : (\r\n      <div className=\"app-lyricsComponent\">\r\n        <button>\r\n          <Link to=\"/\">\r\n            <i className=\"fas fa-angle-double-left\" />\r\n          </Link>\r\n        </button>\r\n        <p>\r\n          {lyrics_body}\r\n          <span>Sorry !!!, You can get only 30% of Lyrics</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"./store/Content\";\nimport Header from \"./layouts/Header\";\nimport Home from \"./components/Home/Home\";\nimport Search from \"./components/Search/Search\";\nimport \"./App.scss\";\nimport LyricsContent from \"./components/Lyrics/LyricsContent\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Search />\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/top_songs/:id\" component={LyricsContent} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}